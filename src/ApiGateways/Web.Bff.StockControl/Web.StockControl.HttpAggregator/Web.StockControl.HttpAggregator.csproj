<Project Sdk="Microsoft.NET.Sdk.Web">

  <PropertyGroup>
    <TargetFramework>net7.0</TargetFramework>
    <Nullable>enable</Nullable>
    <ImplicitUsings>enable</ImplicitUsings>
    <UserSecretsId>6f7514a1-72f8-4aac-9d6b-ea541cbf5c5d</UserSecretsId>
    <DockerDefaultTargetOS>Linux</DockerDefaultTargetOS>
    <DockerfileContext>..\..\..\..</DockerfileContext>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|AnyCPU'">
    <NoWarn>1701;1702;CS8618;</NoWarn>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|AnyCPU'">
    <NoWarn>1701;1702;CS8618;</NoWarn>
  </PropertyGroup>

  <ItemGroup>
    <None Remove="Grpc\Protos\note.proto" />
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="AspNetCore.HealthChecks.Uris" Version="6.0.3" />
    <PackageReference Include="Google.Protobuf" Version="3.24.2" />
    <PackageReference Include="Grpc.AspNetCore.Server.ClientFactory" Version="2.56.0" />
    <PackageReference Include="Grpc.Tools" Version="2.57.0">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
    <PackageReference Include="Microsoft.VisualStudio.Azure.Containers.Tools.Targets" Version="1.18.1" />
    <PackageReference Include="Yarp.ReverseProxy" Version="2.0.1" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\..\..\Services\Common\Service.Common\Service.Common.csproj" />
  </ItemGroup>

  <!--чтобы проект с функциональными тестами могу обращаться к текущему API-->
  <ItemGroup>
    <InternalsVisibleTo Include="Web.StockControl.HttpAggregator.FunctionalTests" />
  </ItemGroup>

  <ItemGroup>
    <!--говорим какой файл используем и чем является наш проект - в данном случаи клиентом-->
    <Protobuf Include="Grpc\Protos\note.proto" GrpcServices="Client" />
  </ItemGroup>

</Project>
