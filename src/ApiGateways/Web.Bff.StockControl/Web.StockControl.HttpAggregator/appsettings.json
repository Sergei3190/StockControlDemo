{
  "Logging": {
    "LogLevel": {
      "Default": "Information",
      "Microsoft.AspNetCore": "Warning"
    }
  },
  "SeqAddress": "https://localhost:443",
  "Kestrel": {
    "EndPoints": {
      "Https": {
        "Url": "https://localhost:7002" //должен совпадать с портом в appsetting.json
      }
    }
  },
  // конфигурация для взаимодействия с swagger через систему Identity
  "OpenApi": {
    "Endpoint": {
      "Name": "Web.StockControl.HttpAggregator.API V1"
    },
    "Document": {
      "Description": "The Web Stock Control Aggregator Getaway API",
      "Title": "Web Stock Control Aggregator API",
      "Version": "v1"
    },
    // берём данные из раздела GetClients файла Config.cs
    "Auth": {
      "ClientId": "web.bff.stockcontrol.sw.ui",
      "AppName": "Web Stock Control Aggregator Swagger UI"
    }
  },
  // конфигурация для взаимодействия с системой Identity
  "Identity": {
    "Audience": "web.bff.stockcontrol",
    "Url": "https://localhost:7003",
    "Scopes": {
      "web.bff.stockcontrol": "Web Bff Stock Control"
    }
  },
  "ReverseProxy": {
    "Routes": {
      //уникальное имя маршрута
      "stock-control-api": {
        // относится к имени записи в разделе кластеров.
        "ClusterId": "stockControl",
        "Match": {
          "Path": "sk/{**catch-all}" // будет соответствовать любому маршруту который имеет первый сегмент "sk", например, sk/api/v1/stock-control
        },
        "Transforms": [
          { "PathRemovePrefix": "/sk" } // будем удалять у входящего маршрута префикс c 
        ]
      },
      "note-api": {
        "ClusterId": "note",
        "Match": {
          "Path": "n/{**catch-all}"
        },
        "Transforms": [
          { "PathRemovePrefix": "/n" }
        ]
      },
      "notification-api": {
        "ClusterId": "notification",
        "Match": {
          "Path": "nt/{**catch-all}"
        },
        "Transforms": [
          { "PathRemovePrefix": "/nt" }
        ]
      },
      "personal-cabinet-api": {
        "ClusterId": "personalCabinet",
        "Match": {
          "Path": "pc/{**catch-all}"
        },
        "Transforms": [
          { "PathRemovePrefix": "/pc" }
        ]
      },
      "file-storage-api": {
        "ClusterId": "fileStorage",
        "Match": {
          "Path": "fs/{**catch-all}"
        },
        "Transforms": [
          { "PathRemovePrefix": "/fs" }
        ]
      }
    },
    "Clusters": {
      "stockControl": { // имя кластера, по которому будем получать адрес микросервиса для дальнейшей отправки запроса, БЕЗ тире "-",
                        // иначе в Docker-Compose при обращении через хост из UI будет падать ошибка 502
        "Destinations": {
          "destination0": {
            "Address": "https://localhost:7004"
          }
        }
      },
      "note": {
        "Destinations": {
          "destination0": {
            "Address": "https://localhost:7005"
          }
        }
      },
      "notification": {
        "Destinations": {
          "destination0": {
            "Address": "https://localhost:7006"
          }
        }
      },
      "personalCabinet": {
        "Destinations": {
          "destination0": {
            "Address": "https://localhost:7007"
          }
        }
      },
      "fileStorage": {
        "Destinations": {
          "destination0": {
            "Address": "https://localhost:7008"
          }
        }
      }
    }
  },
  "HcUrls": {
    "StockControlHcUrl": "https://localhost:7004/hc",
    "NoteHcUrl": "https://localhost:7005/hc",
    "NotificationHcUrl": "https://localhost:7006/hc",
    "PersonalCabinetHcUrl": "https://localhost:7007/hc",
    "FileStorageHcUrl": "https://localhost:7008/hc"
  },
  "GrpcUrls": {
    "NoteUrl": "https://localhost:6005"
  },
  "AllowedHosts": "*"
}
