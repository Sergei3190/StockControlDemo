{
  "Logging": {
    "LogLevel": {
      "Default": "Information",
      "Microsoft.AspNetCore": "Warning"
    }
  },
  "SeqAddress": "https://localhost:443",
  "Kestrel": {
    "EndPoints": {
      "Https": {
        "Url": "https://localhost:7006" //должен совпадать с портом в appsetting.json
      },
      "gRPC": {
        "Url": "https://localhost:6006",
        "Protocols": "Http2"
      }
    }
  },
  "ConnectionStrings": {
    "SqlServer": "Data Source=(localdb)\\mssqllocaldb;Initial Catalog=notification_db_dev;Integrated Security=true;",
    // db - имя сервиса БД в файле docker-compose
    "DockerDb": "Server=db;Database=notification_db_docker_dev;User=SA;Password=YourStrong@Passw0rd123;TrustServerCertificate=true",
    "Redis": "127.0.0.1:6379,password=gR5ySiXx9vX12z",
    "DockerСache": "redis-data" // имя сервиса redis в файле docker-compose
  },
  "Db": {
    "AddTestData": true,
    "Recreate": true,
    "IsFunctionalTest": false, // true не повзволит выполнять добавление данных в бд при тестировании
    "Type": "SqlServer"
  },
  "Cache": {
    "Type": "Redis"
  },
  // конфигурация для взаимодействия с системой Identity
  "Identity": {
    "Audience": "notification",
    "Url": "https://localhost:7003",
    "Scopes": {
      "notification": "Notification API"
    }
  },
  // конфигурация для взаимодействия с swagger через систему Identity
  "OpenApi": {
    "Endpoint": {
      "Name": "Notification.API V1"
    },
    "Document": {
      "Description": "The Notification Service API",
      "Title": "Stock Control Notification API",
      "Version": "v1"
    },
    // берём данные из раздела GetClients файла Config.cs
    "Auth": {
      "ClientId": "notification.sw.ui",
      "AppName": "Notification Swagger UI"
    }
  },
  "EventBus": {
    "Enabled": true, // если шина включена, то настройка "Default" по умолчанию будет включенной, а вот "DeadLetter" мы можем включить или отключить опционально
    "Connect": "Host", // по умолчанию конектимся с локальным хостом
    "Default": {
      "Broker": "stock_control",
      "RetryCount": 10,
      "QueueName": "sc.notification_queue",
      "ExchangeType": "direct",
      "PrefetchCount": 2 // в проде для достижения оптимальной пропускной способности нужно ставить от 100 до 300
    },
    "DeadLetter": {
      "Enabled": true,
      "Broker": "stock_control_dlx",
      "RetryCount": 3,
      "QueueName": "sc.notification_dlx_queue",
      "ExchangeType": "direct",
      "PrefetchCount": 2, // в проде для достижения оптимальной пропускной способности нужно ставить от 100 до 300
      "XDelay": 2 // секунды
    },
    "BusAccess": {
      "DockerHost": "rabbitmq", // имя сервиса кролика в файле docker-compose
      "Host": "localhost",
      "UserName": "admin",
      "Password": "y2ysjnXx9vx10z",
      "RetryCount": 10
    }
  },
  "SignalR": {
    "ChannelPrefix": "Stock Control Notification SignalR",
    "Group": "Stock Control"
  },
  "AllowedHosts": "*"
}
